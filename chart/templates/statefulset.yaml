apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "presence.name" . }}
  labels:
    {{- include "presence.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 2 }}
  serviceName: {{ include "presence.name" . }}-headless
  selector:
    matchLabels:
      {{- include "presence.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "presence.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: regcred
      initContainers:
        - name: init-{{ .Chart.Name }}-migration
          {{- with .Values.container }}
          image: "{{ .migrations.repository }}:{{ .migrations.tag | default .image.tag | default $.Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: IfNotPresent
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: postgresql-{{ include "presence.name" . }}-credentials
                  key: database_url
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: RUST_LOG
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: RUST_LOG
            - name: "CACHE_ENABLED"
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: CACHE_ENABLED
            - name: "CACHE_POOL_SIZE"
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: CACHE_POOL_SIZE
            - name: "CACHE_POOL_IDLE_SIZE"
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: CACHE_POOL_IDLE_SIZE
            - name: "CACHE_POOL_TIMEOUT"
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: CACHE_POOL_TIMEOUT
            - name: "CACHE_EXPIRATION_TIME"
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: CACHE_EXPIRATION_TIME
            - name: "CACHE_URL"
              valueFrom:
                secretKeyRef:
                  name: redis-{{ include "presence.name" . }}-credentials
                  key: CACHE_URL
            - name: DATABASE_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: DATABASE_POOL_SIZE
            - name: DATABASE_POOL_IDLE_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: DATABASE_POOL_IDLE_SIZE
            - name: DATABASE_POOL_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: DATABASE_POOL_TIMEOUT
            - name: DATABASE_POOL_MAX_LIFETIME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "presence.name" . }}-environment
                  key: DATABASE_POOL_MAX_LIFETIME
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: postgresql-{{ include "presence.name" . }}-credentials
                  key: database_url
            - name: APP_AGENT_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: config
              mountPath: /app/App.toml
              subPath: App.toml
            {{- with .Values.svc }}
            {{- $audience := .audience }}
            {{- range $secret, $mounts := .credentials }}
            {{- range $mounts }}
            - name: {{ include "presence.volumeMountName" (list $audience $secret) }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range .Values.audiences }}
            {{- $audience := .audience }}
            {{- range $secret, $mounts := .credentials }}
            {{- range $mounts }}
            - name: {{ include "presence.volumeMountName" (list $audience $secret) }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: presence-config
        {{- with .Values.svc }}
        {{- $audience := .audience }}
        {{- range $secret, $mounts := .credentials }}
        - name: {{ include "presence.volumeMountName" (list $audience $secret) }}
          secret:
            secretName: {{ $secret }}
        {{- end }}
        {{- end }}
        {{- range .Values.audiences }}
        {{- $audience := .audience }}
        {{- range $secret, $mounts := .credentials }}
        - name: {{ include "presence.volumeMountName" (list $audience $secret) }}
          secret:
            secretName: {{ $secret }}
        {{- end }}
        {{- end }}
