apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "presence.labels" . | nindent 4 }}
  name: {{ include "presence.fullname" . }}-app
data:
  App.toml: |
    {{- $id := list (include "presence.name" . ) (include "presence.shortNamespace" .) .Values.app.svc.audience | compact | join "." }}
    id = {{ $id | quote }}
    listener_address = "0.0.0.0:8080"
    metrics_listener_address = "0.0.0.0:8888"
    {{- $svc_audience := list (include "presence.shortNamespace" $) .Values.app.svc.audience | compact | join "." }}
    svc_audience = {{ $svc_audience | quote }}

    [websocket]
    ping_interval = {{ .Values.app.websocket.ping_interval | quote }}
    pong_expiration_interval = {{ .Values.app.websocket.pong_expiration_interval | quote }}
    authentication_timeout = {{ .Values.app.websocket.authentication_timeout | quote }}
    check_old_connection_interval = {{ .Values.app.websocket.check_old_connection_interval | quote }}

    [sentry]
    dsn = {{ .Values.sentry.dsn | quote }}
    environment = {{ .Release.Namespace | quote }}

    {{- println "" }}

    {{- with .Values.app.svc }}
    ##
    ## SVC
    ##
    {{- $svc_audience := list (include "presence.shortNamespace" $) .audience | compact | join "." }}
    {{- with .authn }}
    [authn.{{ $svc_audience | quote }}]
    audience = [{{ $svc_audience | quote }}]
    algorithm = "ES256"
    key = {{ "key" | get . | quote }}
    {{- end }}

    {{- println "" }}

    {{- with .authz }}
    [authz.{{ $svc_audience | quote }}]
    type = {{ .type | quote }}
    {{- if eq "local" .type }}
    trusted = [
      {{- range $account_label := .trusted }}
        {{ list $account_label | join "." | quote }},
      {{- end }}
    ]
    {{- end }}
    {{- if eq "localwhitelist" .type }}
    [[authz.{{ $svc_audience | quote }}.records]]
    {{- range $record := .records }}
    subject_account_id = {{ get $record "subject_account_id" | quote }}
    object = [
      {{- range $o := get $record "object" }}
      {{ $o | quote }},
      {{- end}}
    ]
    action = {{ get $record "action" | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}

    {{- println "" }}

    {{- range .Values.app.audiences }}
    ##
    ## {{ .audience }}
    ##
    {{- $svc_audience := list (include "presence.shortNamespace" $) "svc" .audience | compact | join "." }}
    {{- $usr_audience := list (include "presence.shortNamespace" $) "usr" .audience | compact | join "." }}
    {{- with "authn" | get . }}
    [authn.{{ list "iam" $svc_audience | join "." | quote }}]
    audience = [{{ $svc_audience | quote }}, {{ $usr_audience | quote }}]
    algorithm = "ES256"
    key = {{ "key" | get . | quote }}
    {{- end }}

    {{- $ns_audience := list (include "presence.shortNamespace" $) .audience | compact | join "."  }}
    {{- println "" }}

    {{- with "authz" | get . }}
    [authz.{{ $ns_audience | quote }}]
    type = {{ .type | quote }}
    {{- if eq "http" .type }}
    {{- $default_authz_url := $ns_audience | list "http://dispatcher-cluster:8080/api/v1/authz/" | join "" }}
    uri = {{ default $default_authz_url .uri | quote }}
    algorithm = {{ default "ES256" .algorithm | quote }}
    key = {{ default "data/keys/svc.private_key.p8.der" .key | quote }}
    user_agent = {{ default $id .user_agent | quote }}
    max_retries = {{ default 3 .max_retries }}
    {{- end }}
    {{- if eq "local" .type }}
    trusted = [
      {{- range $account_label := .trusted }}
        {{ $ns_audience | list $account_label | join "." | quote }},
      {{- end }}
    ]
    {{- end }}
    {{- if eq "localwhitelist" .type }}
    [[authz.{{ $ns_audience | quote }}.records]]
    {{- range $record := .records }}
    subject_account_id = {{ get $record "subject_account_id" | quote }}
    object = [
      {{- range $o := get $record "object" }}
      {{ $o | quote }},
      {{- end}}
    ]
    action = {{ get $record "action" | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- println "" }}
    {{- end }}

    [nats]
    url = "nats://nats-back-front-internal-lb:4222"
